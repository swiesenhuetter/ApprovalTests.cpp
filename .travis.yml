# Adapted from various sources, including:
# - https://github.com/gabime/spdlog

sudo: required
language: cpp

#branches:
#  except:
#    - compile_time_ninja_check_74

env:
  global:
    - BOOST_URL="https://dl.bintray.com/boostorg/release/1.72.0/source/boost_1_72_0.tar.bz2"
    - BOOST_DIR="boost_1_72_0"

# -------------------------------------------------------------------------
# Linux gcc
# -------------------------------------------------------------------------

.addons-gcc5: &gcc5
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-5

.addons-gcc6: &gcc6
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-6

.addons-gcc7: &gcc7
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-7

.addons-gcc8: &gcc8
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-8

.addons-gcc9: &gcc9
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-9

# -------------------------------------------------------------------------
# Linux clang
# -------------------------------------------------------------------------

.addons-clang5: &clang5
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-5.0
    packages:
      - clang-5.0
      - libstdc++-8-dev

.addons-clang6: &clang6
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-6.0
    packages:
      - clang-6.0
      - libstdc++-8-dev

.addons-clang7: &clang7
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-7
    packages:
      - clang-7
      - libstdc++-8-dev

.addons-clang8: &clang8
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-8
    packages:
      - clang-8
      - libstdc++-8-dev

#.addons-clang9: &clang9
#  apt:
#    sources:
#      - ubuntu-toolchain-r-test
#      - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
#        key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
#    packages:
#      - clang-9
#      - libclang-cpp9
#      - libllvm9
#      - libclang-common-9-dev
#      - libstdc++-9-dev

matrix:
  include:

    # -------------------------------------------------------------------------
    # Linux gcc
    # -------------------------------------------------------------------------

    - env: GCC_VERSION=5
      os: linux
      addons: *gcc5

    - env: GCC_VERSION=6
      os: linux
      addons: *gcc6

    - env: GCC_VERSION=7
      os: linux
      addons: *gcc7

    - env: GCC_VERSION=8
      os: linux
      addons: *gcc8

    - env: GCC_VERSION=9
      os: linux
      addons: *gcc9

    # -------------------------------------------------------------------------
    # Linux clang
    # -------------------------------------------------------------------------

    - env: CLANG_VERSION=5.0
      os: linux
      dist: trusty
      addons: *clang5

    - env: CLANG_VERSION=6.0
      os: linux
      dist: trusty
      addons: *clang6

    - env: CLANG_VERSION=7
      os: linux
      dist: trusty
      addons: *clang7

    - env: CLANG_VERSION=8
      os: linux
      dist: trusty
      addons: *clang8

#    - env: CLANG_VERSION=9
#      os: linux
#      dist: trusty
#      addons: *clang9

    # -------------------------------------------------------------------------
    # Mac clang
    # -------------------------------------------------------------------------

    - os: osx
      osx_image: xcode8.3

    - os: osx
      osx_image: xcode9.4

    - os: osx
      osx_image: xcode10.2

    - os: osx
      osx_image: xcode11.3

before_script:
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export CXX="clang++" CC="clang"; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then travis_retry wget --quiet -O - ${BOOST_URL} | tar -xj || exit 1 ; export BOOST_ROOT=`pwd`/${BOOST_DIR} ; echo $BOOST_ROOT ; fi
  - which $CXX
  - which $CC
  - $CXX --version
  - cmake --version

script:
  - mkdir .build
  - cd .build
  - cmake ..
  - cmake --build .
  - ctest --verbose

notifications:
  email: true
